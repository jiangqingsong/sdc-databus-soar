package com.broadtech.databus.soar.service.impl;

import com.broadtech.databus.soar.service.ScanVulnerabilityService;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;

import java.util.HashMap;
import java.util.Map;

/**
 * @program sdc-databus-soar
 * @description: 漏洞扫描服务类
 * @author: 蒋青松
 * @create: 2022/10/10 13:38
 */
@Service
public class ScanVulnerabilityServiceImpl implements ScanVulnerabilityService {
    public static final String SYS_SCAN_ADD_URL = "/async/sysscan/add?target={target}&user={user}&pwd={pwd}";
    public static final String WEB_SCAN_ADD_URL = "/async/webscan/add?target={target}&user={user}&pwd={pwd}";
    public static final String STATUS_URL = "/async/status?&taskid={taskid}&user={user}&pwd={pwd}";
    public static final String SYS_SCAN_RESULT_URL = "/async/sysscan/query?taskid={taskid}&user={user}&pwd={pwd}";
    public static final String WEB_SCAN_RESULT_URL = "/async/webscan/query?taskid={taskid}&user={user}&pwd={pwd}";

    @Override
    public String sysScanAdd(String target, String user, String pwd) {
        RestTemplate restTemplate = new RestTemplate();
        Map<String, String> params = new HashMap<>();
        params.put("target", target);
        params.put("user", user);
        params.put("pwd", pwd);
        ResponseEntity<String> responseEntity = restTemplate.getForEntity(SYS_SCAN_ADD_URL, String.class, params);
        responseEntity.getBody();
        return responseEntity.getBody();
    }

    @Override
    public String webScanAdd(String target, String user, String pwd) {
        RestTemplate restTemplate = new RestTemplate();
        Map<String, String> params = new HashMap<>();
        params.put("target", target);
        params.put("user", user);
        params.put("pwd", pwd);
        ResponseEntity<String> responseEntity = restTemplate.getForEntity(WEB_SCAN_ADD_URL, String.class, params);
        responseEntity.getBody();
        return responseEntity.getBody();
    }

    @Override
    public String getStatus(String taskId, String user, String pwd) {
        RestTemplate restTemplate = new RestTemplate();
        Map<String, String> params = new HashMap<>();
        params.put("taskid", taskId);
        params.put("user", user);
        params.put("pwd", pwd);
        ResponseEntity<String> responseEntity = restTemplate.getForEntity(STATUS_URL, String.class, params);
        responseEntity.getBody();
        return responseEntity.getBody();
    }

    @Override
    public String sysScanResultQuery(String taskId, String user, String pwd) {
        RestTemplate restTemplate = new RestTemplate();
        Map<String, String> params = new HashMap<>();
        params.put("taskid", taskId);
        params.put("user", user);
        params.put("pwd", pwd);
        ResponseEntity<String> responseEntity = restTemplate.getForEntity(SYS_SCAN_RESULT_URL, String.class, params);
        responseEntity.getBody();
        return responseEntity.getBody();
    }

    @Override
    public String webScanResultQuery(String taskId, String user, String pwd) {
        RestTemplate restTemplate = new RestTemplate();
        Map<String, String> params = new HashMap<>();
        params.put("taskid", taskId);
        params.put("user", user);
        params.put("pwd", pwd);
        ResponseEntity<String> responseEntity = restTemplate.getForEntity(WEB_SCAN_RESULT_URL, String.class, params);
        responseEntity.getBody();
        return responseEntity.getBody();
    }
}
